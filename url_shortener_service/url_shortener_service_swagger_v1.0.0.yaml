swagger: '2.0'
info:
  title: URL Shortener Service
  description: |
    The URL Shortener Service API is a platform that provides functionalities to shorten long URLs, allowing users to generate short and accessible URLs. With this API, users can create new shortened URLs, access the original URLs through the generated short URLs, and obtain analytical data about URL usage.

    Key features of the API include:

    1. **Short URL Creation**: Users can submit a long URL and receive a corresponding short URL, which can be easily shared and accessed.
    
    2. **Redirection to Original URLs**: When accessing a generated short URL, the API automatically redirects to the corresponding original URL, enabling access to the desired content.
    
    3. **URL Analytics**: Administrators have access to analytical routes that provide statistical data on the usage of shortened URLs, including information such as access counts, devices used, operating systems, among others.
    
    4. **Access Security**: Short URL creation and analytics routes require authentication, ensuring that only authorized users can access and utilize these resources.

    With these functionalities, the URL Shortener Service API offers a simple and effective way to shorten URLs, track the performance of shortened URLs, and enhance user experience when sharing and accessing links on the web.
  version: 1.0.0
host: localhost:3001
basePath: /
schemes:
  - http
tags:
  - name: Shortener
    description: "Routes related to authentication"
  - name: URL Analytics
    description: "Routes related to URL analytics"
paths:
  /{hash}:
    get:
      tags:
        - Shortener
      description: 'This endpoint is used to redirect the shortened URL to the original long URL associated with the provided hash. Upon receiving a request with the hash parameter, the server retrieves the corresponding long URL from the database. If the URL is found, a 301 redirect is performed to the original long URL. Otherwise, a 404 Not Found response is returned.'
      
      parameters:
        - name: hash
          in: path
          required: true
          description: 'Hash code representing the shortened URL.'
          type: string
      responses:
        '301':
          description: 'Redirect'
        '404':
          description: 'Not Found'
        '500':
          description: 'Internal Server Error'
  /shorten:
    post:
      tags:
        - Shortener
      description: 'This endpoint is used to create new shortened URLs. It receives a long URL, stores it in the database, generates a hash, and returns the shortened URL to the user. Only logged-in users, both USER and ADMIN types, can use this endpoint.'
      parameters:
        - name: authorization
          in: header
          type: string
          description: 'User token for authentication.'
          required: true
        - name: body
          in: body
          required: true
          description: 'Request body containing the long URL to be shortened.'
          schema:
            type: object
            properties:
              url:
                type: string
                example: 'https://longExampleUrl.com'
      responses:
        '201':
          description: 'Short URL created successfully.'
          schema:
            type: object
            properties:
              message:
                type: string
                example: 'Short URL created'
              shortUrl:
                type: string
                example: 'http://localhost:3001/b5bfaf5f'
              hash:
                type: string
                example: 'b5bfaf5f'
        '400':
          description: 'Bad Request'
        '401':
          description: 'Unauthorized: Token is required.'
        '500':
          description: 'Internal Server Error'

  /analytics/url:
    get:
      tags:
        - URL Analytics
      description: 'Endpoint to retrieve URL analytics data. This endpoint is restricted to users with ADMIN privileges. The user token must be provided in the request header for authentication. Pagination is supported, allowing users to specify the page number and page size for data retrieval. If not specified, the default page is 1 with 10 items per page. Filters can be applied using the longUrlFilter and createdByFilter parameters to narrow down the search results.'
      parameters:
        - name: page
          in: query
          type: string
          description: 'Page number for pagination.'
        - name: pageSize
          in: query
          type: string
          description: 'Number of items per page.'
        - name: longUrlFilter
          in: query
          type: string
          description: 'Filter by long URL.'
        - name: createdByFilter
          in: query
          type: string
          description: 'Filter by creator.'
        - name: authorization
          in: header
          type: string
          required: true
          description: 'User token required for authentication.'
      responses:
        '200':
          description: 'Successful response containing URL analytics data.'
          schema:
            type: object
            properties:
              urlMapperItems:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                      description: 'ID of the URL mapper item.'
                    longUrl:
                      type: string
                      description: 'Long URL.'
                    hash:
                      type: string
                      description: 'Shortened hash.'
                    accessCount:
                      type: number
                      description: 'Access count.'
                    createdBy:
                      type: string
                      description: 'Email of the creator.'
                    createdAt:
                      type: string
                      format: date-time
                      description: 'Creation date and time of the URL mapper item.'
              maxItems:
                type: number
                description: 'Total number of URL mapper items.'
        '401':
          description: 'Unauthorized: Token is required / Invalid Token / Invalid user role'
          schema:
            type: object
            properties:
              message:
                type: string
                description: 'Error message indicating token is required.'


  /analytics/url/{id}:
    get:
      tags:
        - URL Analytics
      description: 'This endpoint is used to retrieve URL analytics data by providing the ID of the URL mapper item. It is accessible only to ADMIN users, who must also provide a valid authentication token in the request header. The `id` parameter in the path represents the ID of the URL mapper item. Upon successful retrieval, the response will contain detailed information about the URL mapper item.'
      parameters:
        - name: id
          in: path
          required: true
          description: 'ID of the URL mapper item.'
          type: number
        - name: Authorization
          in: header
          required: true
          description: 'User token for authentication.'
          type: string
      responses:
        '200':
          description: 'OK'
          schema:
            type: object
            properties:
              id:
                type: number
                description: 'ID of the URL mapper item.'
              longUrl:
                type: string
                description: 'Long URL.'
              hash:
                type: string
                description: 'Shortened hash.'
              accessCount:
                type: number
                description: 'Access count.'
              createdBy:
                type: string
                description: 'Email of the creator.'
              createdAt:
                type: string
                format: date-time
                description: 'Creation date and time of the URL mapper item.'
        '400':
          description: 'Bad Request'
        '401':
          description: 'Unauthorized'
        '500':
          description: 'Internal Server Error'
